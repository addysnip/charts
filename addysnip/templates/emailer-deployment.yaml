apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailer
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emailer.addysnip
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: emailer.addysnip
    spec:
      containers:
      - env:
        - name: GRPC_GO_LOG_VERBOSITY_LEVEL
          value: {{ default "0" .Values.billing.grpc.log.verbosity }}
        - name: GRPC_GO_LOG_SEVERITY_LEVEL
          value: {{ default "error" .Values.billing.grpc.log.severity }}
        - name: RABBITMQ_QUEUE
          value: {{ default "emailer" .Values.emailer.rabbitmq.queue }}
        envFrom:
        - secretRef:
            name: smtp-noreply
            optional: false
        - secretRef:
            name: database
            optional: false
        - secretRef:
            name: rabbitmq
            optional: false
        {{- with .Values.emailer.image }}
        image: "{{- if .repository -}}{{ .repository }}{ else }}{{ .registry }}/{{ .image }}{{- end -}}:{{ .tag }}{{- if (.digest) -}}@{{ .digest }}{{- end -}}"
        {{- end }}
        imagePullPolicy: Always
        name: billing
        ports:
        - containerPort: 5000
          name: 5000tcp
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets.name }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30